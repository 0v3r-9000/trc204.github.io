# -*- coding: utf-8 -*-
"""Tumor_Type_ID.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LtXHQeH-nT2j8GIG5xWihEtFMh7ugoOz
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OrdinalEncoder
import matplotlib.pyplot as plt

dffeatures = pd.read_csv('data.csv')
dftarget = pd.read_csv('labels.csv')

print(dftarget)
print(dffeatures)

df = dffeatures.merge(dftarget, on='Unnamed: 0')
df

df.isnull().sum()

df_cleaned = df.dropna()
display(df_cleaned.isnull().sum())

df_cleaned

ord = OrdinalEncoder()
df_cleaned['Class'] = ord.fit_transform(df_cleaned[['Class']])

df_cleaned

X = df_cleaned.drop(['Class', 'Unnamed: 0'], axis=1)
y = df_cleaned['Class']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

XGBC = XGBClassifier()

XGBC.fit(X_train, y_train)

XGBC.predict(X_test)

XGBC.score(X_test, y_test)

from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay

y_pred = XGBC.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=np.unique(np.concatenate((y_test, y_pred))))
disp.plot()
plt.show()

# Based on the Elbow Method and Silhouette Score plots, 5 clusters seems like a reasonable choice.
kmeans = KMeans(n_clusters=5, random_state=42, n_init=10)
kmeans.fit(X)
df_cleaned['cluster_label'] = kmeans.predict(X)

from sklearn.decomposition import PCA

pca = PCA(n_components=2)
principal_components = pca.fit_transform(X)

df_plot = pd.DataFrame(data=principal_components, columns=['principal_component_1', 'principal_component_2'])
df_plot['cluster_label'] = df_cleaned['cluster_label'].values

plt.figure(figsize=(8, 6))
plt.scatter(df_plot['principal_component_1'], df_plot['principal_component_2'], c=df_plot['cluster_label'], cmap='viridis')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.title('Clusters after PCA')
plt.show()

cluster_characteristics = df_cleaned.drop('Unnamed: 0', axis=1).groupby('cluster_label').mean()
display(cluster_characteristics)

"""## Summary:

### Data Analysis Key Findings

*   Based on the Elbow Method and Silhouette Score plots, 5 clusters were deemed a reasonable choice for K-Means clustering.
*   The K-Means algorithm was successfully applied with 5 clusters, and the resulting cluster labels were added to the `df_cleaned` DataFrame.
*   Principal Component Analysis (PCA) was used to reduce the data dimensionality to two components, allowing for a 2D visualization of the clusters.
*   A scatter plot of the principal components, colored by cluster label, showed the spatial separation of the identified clusters.
*   Analysis of the mean gene expression values for each cluster revealed distinct characteristics for each cluster, providing insights into their potential biological significance. For instance, one could potentially identify clusters with high expression of genes related to specific biological processes.

### Insights or Next Steps

*   Further investigation of the genes with significantly high or low mean expression in each cluster can provide deeper biological insights into the characteristics of each group.
*   Consider applying biological pathway analysis to the genes that are characteristic of each cluster to understand the functional differences between the identified groups.

"""